IssueComment {issueCommentUpdatedAt = GithubDate {fromGithubDate = 2013-06-25 16:24:16 UTC}, issueCommentUser = GithubUser {githubOwnerAvatarUrl = "https://secure.gravatar.com/avatar/97c543aca1ac7bbcfb5279d0300c8330?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png", githubOwnerLogin = "njsmith", githubOwnerUrl = "https://api.github.com/users/njsmith", githubOwnerId = 609896, githubOwnerGravatarId = "97c543aca1ac7bbcfb5279d0300c8330"}, issueCommentUrl = "https://api.github.com/repos/pydata/patsy/issues/comments/19988571", issueCommentCreatedAt = GithubDate {fromGithubDate = 2013-06-25 16:24:16 UTC}, issueCommentBody = "I only looked at your code for a few seconds, so I could be confused :-)\r\n\r\nThis looks like a good skimmable paper on why orthogonal is better than\r\nvander in many cases (and I'm not aware of any situation where it's worse):\r\nhttp://www.jstor.org/stable/1403204\r\n\r\nThe confusion is that the term \"orthogonal polynomial\" almost always refers\r\nto something else, that afaict is totally irrelevant to linear regression.\r\nIn ordinary mathematical usage, two polynomials f1 and f2 are orthogonal\r\niff the integral of f1(x)f2(x)dx = 0, evaluated over the whole domain.\r\n\r\nWhat we want are polynomials so that sum f1(x)f2(x) = 0 when summing over\r\nour data points.\r\n\r\nPoly() implements this latter (and only uses it for categorical variables\r\ntreated as integers, but the code would work for non-integer data just as\r\nwell).\r\n\r\nWhat stata does I don't know. The manual page you pointed me to strongly\r\nimplies that they produce the second kind of orthogonal polynomials (when\r\nit says \"orthog and orthpoly create a set of variables such that the\r\n\"effects\" of all the preceding variable have been removed from each\r\nvariable.\"). But afaict the Christoffel-Darboux recurrence is for producing\r\nthe first kind of orthogonal polynomials.\r\n\r\nAre the predictor vectors that you get out of orthpoly actually orthogonal\r\nas vectors?\r\n\r\nAFAICT, the Poly class is only intended for equally spaced categorical\r\nvariables. At least, I couldn't figure out how to replicate what\r\northpolygives with\r\nPoly for a continuous regressor, but I just wanted to work on something\r\nelse for an hour.\r\n\r\nI'm not sure I understand your distinction between what's orthogonal to\r\nwhat. I think orthpoly is like a scaled version of legvander that Josef was\r\nafter.\r\n\r\nfrom statsmodels.tools.tools import webuse\r\ndta = webuse(\"auto\")\r\nweight = dta[\"weight\"].values.astype(float)\r\north = orthpoly(weight, 4)\r\nnp.allclose(np.dot(orth[:,0], orth[:,1]), 0)\r\n\r\nhttp://www.stata.com/help11.cgi?orthpoly\r\n\r\n\8212\r\nReply to this email directly or view it on\r\nGitHub<https://github.com/pydata/patsy/issues/20#issuecomment-19985792>\r\n.", issueCommentId = 19988571}