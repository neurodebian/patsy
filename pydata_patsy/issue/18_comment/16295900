IssueComment {issueCommentUpdatedAt = GithubDate {fromGithubDate = 2013-04-12 14:29:45 UTC}, issueCommentUser = GithubUser {githubOwnerAvatarUrl = "https://secure.gravatar.com/avatar/97c543aca1ac7bbcfb5279d0300c8330?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png", githubOwnerLogin = "njsmith", githubOwnerUrl = "https://api.github.com/users/njsmith", githubOwnerId = 609896, githubOwnerGravatarId = "97c543aca1ac7bbcfb5279d0300c8330"}, issueCommentUrl = "https://api.github.com/repos/pydata/patsy/issues/comments/16295900", issueCommentCreatedAt = GithubDate {fromGithubDate = 2013-04-12 14:29:45 UTC}, issueCommentBody = "Huh, fair enough, the parse evaluator does recurse over the parse tree. It\r\nhadn't occurred to me that people would want to parse strings with hundreds\r\nof terms :-).\r\n\r\nI'll think about how fixable that is. In the main time you may prefer in\r\nany case to use the programmatic interface for constructing formulas, which\r\nbypasses the string parser entirely. See\r\n  http://patsy.readthedocs.org/en/latest/expert-model-specification.html\r\nand in particular the paragraph starting \"However, there is also a middle\r\nground...\".\r\n\r\nIn your case I'd do something like\r\n\r\nfrom patsy import ModelDesc, Term, LookupFactor\r\n\r\nmy_formula = ModelDesc([], [Term(LookupFactor(c)) for c in df.columns])\r\ndmatrix(my_formula, df)\r\n\r\nLet me know how it goes, there might be other places where I didn't think\r\nscaling through far enough...\r\n\r\nOn Fri, Apr 12, 2013 at 2:04 PM, NaN <notifications@github.com> wrote:\r\n\r\n> I am working with a dataframe which has 7000 columns and it turns out that\r\n> once you go beyond 485 terms, patsy throws a recursion error when going\r\n> from a formula to a design matrix. Is there a better way of doing this?\r\n>\r\n> Thanks!\r\n>\r\n> In [282]: df = pd.DataFrame(dict(('a' + str(i), np.random.randn(5)) for i in xrange(500)))\r\n> In [283]: formula = \" + \".join(df.columns)\r\n> In [284]: dmatrices(formula, df)\r\n> ....\r\n> /Users/xxx/lib/python2.7/site-packages/patsy-0.1.0_dev-py2.7.egg/patsy/desc.pyc in eval(self, tree, require_evalexpr)\r\n>     452                                 \"'%s' operator\" % (tree.type,),\r\n>     453                                 tree.token)--> 454         result = self._evaluators[key](self, tree)\r\n>     455         if require_evalexpr and not isinstance(result, IntermediateExpr):\r\n>     456             if isinstance(result, ModelDesc):\r\n> /Users/xxx/lib/python2.7/site-packages/patsy-0.1.0_dev-py2.7.egg/patsy/desc.pyc in _eval_binary_plus(evaluator, tree**)\r\n>     283\r\n>     284 def _eval_binary_plus(evaluator, tree):--> 285     left_expr = evaluator.eval(tree.args[0])\r\n>     286     if tree.args[1].type == \"ZERO\":\r\n>     287         return IntermediateExpr(False, None, True, left_expr.terms)\r\n> /Users/xxx/lib/python2.7/site-packages/patsy-0.1.0_dev-py2.7.egg/patsy/desc.pyc in eval(self, tree, require_evalexpr)\r\n>     452                                 \"'%s' operator\" % (tree.type,),\r\n>     453                                 tree.token)--> 454         result = self._evaluators[key](self, tree)\r\n>     455         if require_evalexpr and not isinstance(result, IntermediateExpr):\r\n>     456             if isinstance(result, ModelDesc):\r\n> /Users/xxx/lib/python2.7/site-packages/patsy-0.1.0_dev-py2.7.egg/patsy/desc.pyc in _eval_binary_plus(evaluator, tree**)\r\n>     283\r\n>     284 def _eval_binary_plus(evaluator, tree):--> 285     left_expr = evaluator.eval(tree.args[0])\r\n>     286     if tree.args[1].type == \"ZERO\":\r\n>     287         return IntermediateExpr(False, None, True,\r\n>     left_expr.terms)\r\n> /Users/xxx/lib/python2.7/site-packages/patsy-0.1.0_dev-py2.7.egg/patsy/desc.pyc in eval(self, tree, require_evalexpr)\r\n>     448         assert isinstance(tree, ParseNode)\r\n>     449         key = (tree.type, len(tree.args))--> 450         if key not in self._evaluators:\r\n>     451             raise PatsyError(\"I don't know how to evaluate this \"\r\n>     452                                 \"'%s' operator\" % (tree.type,),\r\n> RuntimeError: maximum recursion depth exceeded in cmp\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/pydata/patsy/issues/18>\r\n> .\r\n>", issueCommentId = 16295900}