IssueComment {issueCommentUpdatedAt = GithubDate {fromGithubDate = 2013-05-24 18:26:58 UTC}, issueCommentUser = GithubUser {githubOwnerAvatarUrl = "https://secure.gravatar.com/avatar/97c543aca1ac7bbcfb5279d0300c8330?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png", githubOwnerLogin = "njsmith", githubOwnerUrl = "https://api.github.com/users/njsmith", githubOwnerId = 609896, githubOwnerGravatarId = "97c543aca1ac7bbcfb5279d0300c8330"}, issueCommentUrl = "https://api.github.com/repos/pydata/patsy/issues/comments/18421816", issueCommentCreatedAt = GithubDate {fromGithubDate = 2013-05-24 18:26:58 UTC}, issueCommentBody = "Looks like a good workaround. The only thing to watch out for here is that\r\nthe .design_info attribute on your design matrix will still have the old\r\nterm names in it. Right now that probably won't affect anything, but\r\nsomeday statsmodels and friends will probably be smart enough to use that\r\nmetadata for various things, so keep an eye out for that.\r\n\r\n(This comment is partly directed at people who google this thread years\r\nfrom now.)\r\n\r\n\r\nOn Fri, May 24, 2013 at 2:11 PM, jtornero <notifications@github.com> wrote:\r\n\r\n> Thank you very much for your fast answer.\r\n>\r\n> I've made a workaround forcing the dmatrices (or dmatrix) output to pandas\r\n> dataframe and substituing in dataframe.columns, i.e., say predictors is our\r\n> dataframe:\r\n>\r\n> newcol=predictors.rename(columns=lambda x: str.replace(x,'C(anocod,\r\n> Treatment(23))','ANOCOD'))\r\n> newcol=newcol.rename(columns=lambda x: str.replace(x,'C(trimcod,\r\n> Treatment(4))','TRIMCOD'))\r\n> newcol=newcol.rename(columns=lambda x: str.replace(x,'C(flota,\r\n> Treatment(11))','FLEETYPE'))\r\n>\r\n> and then\r\n>\r\n> predictors.columns=newcol\r\n>\r\n> Cheers\r\n>\r\n> Jorge Tornero\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/pydata/patsy/issues/19#issuecomment-18403778>\r\n> .\r\n>", issueCommentId = 18421816}